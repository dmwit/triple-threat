a random hodge-podge of notes on people to contact, papers to follow up, keywords to search for, etc.

browse HCI journals of the last few years to look for people to contact -- even related but not identical ideas should be good people to ask about whether there's work in the area

...related to constraint lenses, which will likely have to appear in some form or other if we're going to allow locking cells in the spreadsheet:
constraint logic programming
convex hulls (what are these?)

Related People
-------------
Simon Peyton Jones
Margaret Burnett

FABIT Project: http://wiki.di.uminho.pt/twiki/bin/view/Research/FATBIT/WebHome
------------------------------------------------------------------------------
Bidirectional transformation of model-driven spreadsheets
  - Model-driven spreadsheets describe the structure of the spreadsheet
  - the bidirectional transformations here convert between different spreadsheet models
Towards the bidirectionalization of spreadsheet formulas
  - Poster abstract, describes idea for lenses as bidirectional formulas in spreadsheet cells
  - Very relevent, and the group might be doing current work in the area. Contact?


Spreadsheet Corpus: http://esquared.unl.edu/wikka.php?wakka=EUSESSpreadsheetCorpus
----------------------------------------------------------------------------------
  - Daniel sent email request

Spreadsheet Paradigm
--------------------
Tableau Softaware: tableausoftware.com
  - Basic idea: visual data exploration
  - Based on Polaris project: http://www.graphics.stanford.edu/projects/polaris/
Forms/3: A first-order visual language to explore the boundaries of the spreadsheet paradigm ftp://ftp.engr.orst.edu/pub/burnett/Forms3.JFP.pdf
  - there's a lot of details I still don't understand perfectly, but anyway the main ideas are pretty clear and not very relevant: this is primarily still a one-way computational idea
User interface specification using an enhanced spreadsheet model: http://smartech.gatech.edu/bitstream/handle/1853/3630/93-20.pdf?sequence=1
  - Design user interfaces without explicit programming

Patents
-------
Data-bidirectional spreadsheet: http://www.google.com/patents/US20040044954
  - Describes using variables in a spreadsheet that were defined outside the spreadsheet
  - Allows edits to the variable inside the spreadsheet to be propogated outside the spreadsheet
Method of bidirectional recalculation: http://www.google.com/patents/US5339410
  
Constraint Programming and Spreadsheets
---------------------------------------
* A spreadsheet interface for logic programming: http://dl.acm.org/citation.cfm?doid=67450.67466
* Practical applications of constraint programming: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.43.9494&rep=rep1&type=pdf
  - 1995 survey of constraint programming
* A spreadsheet based on constraints: http://dl.acm.org/citation.cfm?doid=168642.168664
  - very relevant! instead of giving formulas for particular cells, the relationship between cells is specified and an update to any of the related cells causes the others to recompute
  - actually a bit disappointing: only equality constraints, doesn't say much about what language is allowed in the equalities, ships out to Mathematica and doesn't try to characterize which constraints will succeed, fail, or return multiple answers
* An explanation-based, visual debugger for one-way constraints: http://academic.research.microsoft.com/Publication/1242101/an-explanation-based-visual-debugger-for-one-way-constraints
  - allowing people to run a spreadsheet "backwards" to figure out why a particular cell has a particular value
* A Declarative Programming Environment Based on Constraints
  - another take, but as a paper it is fairly content-free; hardly more than "we wrote a piece of software" without even saying very much about what the software does, let alone how it does it
* HotDoc: A Flexible Framework for Spatial Composition: http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=626563
* A New Basis for Spreadsheet Computing: http://www.aaai.org/ojs/index.php/aimagazine/article/view/1533
  - two focuses: (1) representing non-exact numeric values (ranges, distributions) and (2) constraint propogation to fill in any cell determined by the other cells in the equation.
  - fully integrated with Excel, might be a good model of such integration
* A sufficient condition for backtrack-free search: http://www.cs.cmu.edu/~arielpro/mfai_papers/jacm82.pdf
  - studies relationship between structure of constraint graph, an ordering on that graph, and when that search order is backtrack-free (can update without backtracking)
  - Since out constraints are ``ordered'' themselves, can we specialize their notion of ordering to make a good order easy to find?
* Tree clustering for constraint networks: http://cse.unl.edu/~choueiry/Documents/Dechter-TC-AIJ89.pdf
  - restructure a constraint graph into cliques that form a tree structure
  - if the restructured graph satisfies certain properties, then can achieve backtrack-free solution

Multi-way Constraints and Spreadsheets
---------------------------------------
The basic idea of multi-way local propagation constraints is pretty slick. It goes like this:
1. Each constraint connects some set of variables.
2. Each constraint can have a collection of "methods" for propagating updates
   locally that restores the constraint.
3. When an update happens, do a *search* for a collection of methods to use to
   restore as many constraints as possible. Critically, this may leave some
   constraints unsatisfied! A collection of methods to use is "good" when
   there's no other collection of methods that results in a strict superset of
   satisfied constraints.
Cycles are allowed, provided there's an external solver that can take a given
method cycle and resolve it. Critically (compared to us):
1. Constraints are allowed to be broken.
2. Once a given collection of methods is chosen, all choices are local.
   (Whereas we are at least exploring the possibility of global update
   computation.)
3. There's a bit better story about cycles than what we've got so far. (That
   is, there exists a story!)
Additionally, they add a wrinkle by giving constraints strengths; this gives
the user a bit of control over which methods are chosen, but I think isn't
really a particularly fundamental challenge.
* Analyzing and debugging hierarchies of multi-way local propagation constraints: http://pdf.aminer.org/000/548/003/analyzing_and_debugging_hierarchies_of_multi_way_local_propagation_constraints.pdf  
  - debugging inside of SkyBlue, which uses constraint heiarchies to prioritize constraints
  - discusses the design of an algorithm for computing all possible good method collections (with some focus on making it efficient as well)
* Multi-way versus one-way constraints in user interfaces: Experience with the DeltaBlue Algorithm: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.38.2714&rep=rep1&type=pdf
* Graphical techniques in a spreadsheet for specifying user interfaces: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.18.3001&rep=rep1&type=pdf
  - Use spreadsheets to define constraints, instead of using constraints to define spreadsheets
* SkyBlue: A Multi-Way Local Propagation Constraint Solver for User Interface Construction: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.32.6479&rep=rep1&type=pdf

Distributed Spreadsheets
------------------------
Operation transforms for a distributed shared spreadsheet: http://dl.acm.org/citation.cfm?id=289474
  - not all that relevant, but gives one possible approach to updating the formula/value pair: just clobber the formula


Structured Spreadsheets
------------------------
UCheck: A spreadsheet type checker for end users: http://web.engr.oregonstate.edu/~erwig/papers/UCheck_JVLC07.pdf
  - Automatically detects errors by means of a unit reasoning system
Automatic generation and maintenance of correct spreadsheets: http://dl.acm.org/citation.cfm?id=1062494
  - Syntax for generating spreadsheet templates
An end-user oriented graph-based visualization for spreadsheets: http://dl.acm.org/citation.cfm?id=1370866
  - Visualize data flow in a spreadsheet
Model-Based Programming Environments for Spreadsheets: http://www3.dsi.uminho.pt/seeum2010/CD/artigos/1697-4.pdf
From Spreadsheets to Relational Databases and Back: http://wiki.di.uminho.pt/twiki/pub/Personal/Jacome/WebHome/sle08.pdf
  - these two papers are primarily discussing a bidirectional transformation
    where the entire spreadsheet is one of the replicas, so only tangentially
    related (a big part of the technical contribution seems to be inferring
    tabular
structure and functional dependencies)

Databases: How-To, What-If, and Reverse Data Dependencies
---------------------------------------------------------
Caravan: Provisioning for What-If Analysis: http://www.cidrdb.org/cidr2013/Papers/CIDR13_Paper100.pdf
  - run many related queries at once, with a compact representation of the answers to all of them
Reverse Data Management: http://homes.cs.washington.edu/~suciu/p1490-meliou.pdf
Tiresias: The Database Oracle for How-To Queries: http://homes.cs.washington.edu/~suciu/file23_main.pdf
Tiresias: A Demonstration of How-To Queries: http://db.cs.washington.edu/tiresias/papers/Tiresias-demo.pdf
